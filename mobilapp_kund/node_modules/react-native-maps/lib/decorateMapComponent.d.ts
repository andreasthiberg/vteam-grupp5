/// <reference types="react" />
import { HostComponent } from 'react-native';
import { Provider } from 'react-native-maps/lib/sharedTypes';
import { MapCallout } from 'react-native-maps/lib/MapCallout';
import { MapOverlay } from 'react-native-maps/lib/MapOverlay';
import { MapCalloutSubview } from 'react-native-maps/lib/MapCalloutSubview';
import { MapCircle } from 'react-native-maps/lib/MapCircle';
import { MapHeatmap } from 'react-native-maps/lib/MapHeatmap';
import { MapLocalTile } from 'react-native-maps/lib/MapLocalTile';
import { MapMarker } from 'react-native-maps/lib/MapMarker';
import { MapPolygon } from 'react-native-maps/lib/MapPolygon';
import { MapPolyline } from 'react-native-maps/lib/MapPolyline';
import { MapUrlTile } from 'react-native-maps/lib/MapUrlTile';
import { MapWMSTile } from 'react-native-maps/lib/MapWMSTile';
export declare const SUPPORTED: ImplementationStatus;
export declare const USES_DEFAULT_IMPLEMENTATION: ImplementationStatus;
export declare const NOT_SUPPORTED: ImplementationStatus;
export declare const ProviderContext: import("react").Context<Provider>;
export declare function getNativeMapName(provider: Provider): "AIRMap" | "AIRGoogleMap";
export declare const createNotSupportedComponent: (message: string) => () => null;
export declare const googleMapIsInstalled = true;
export default function decorateMapComponent<Type extends Component>(Component: Type, componentName: ComponentName, providers: Providers): Type;
declare type ImplementationStatus = 'SUPPORTED' | 'USES_DEFAULT_IMPLEMENTATION' | 'NOT_SUPPORTED';
declare type Providers = {
    google: {
        ios: ImplementationStatus;
        android: ImplementationStatus;
    };
};
export declare type UIManagerCommand = number;
export declare type MapManagerCommand = any;
export declare type NativeComponent<H = unknown> = HostComponent<H> | ReturnType<typeof createNotSupportedComponent>;
declare type Component = typeof MapCallout | typeof MapCalloutSubview | typeof MapCircle | typeof MapHeatmap | typeof MapLocalTile | typeof MapMarker | typeof MapOverlay | typeof MapPolygon | typeof MapPolyline | typeof MapUrlTile | typeof MapWMSTile;
declare type ComponentName = 'Callout' | 'CalloutSubview' | 'Circle' | 'Heatmap' | 'LocalTile' | 'Marker' | 'Overlay' | 'Polygon' | 'Polyline' | 'UrlTile' | 'WMSTile';
export {};
